name: Build and Deploy

on:
  push:
    branches: [ main, master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: renatus-cartesius/fuckupboard

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      backend_changed: ${{ steps.backend_changes.outputs.changed }}
      frontend_changed: ${{ steps.frontend_changes.outputs.changed }}
      ansible_changed: ${{ steps.ansible_changes.outputs.changed }}
      commit_sha: ${{ steps.get_commit.outputs.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get commit SHA
        id: get_commit
        run: echo "sha=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

      - name: Check for backend changes
        id: backend_changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -E '^(main\.go|go\.mod|go\.sum|Dockerfile\.backend|\.github/workflows/deploy\.yml)' > /dev/null; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Check for frontend changes
        id: frontend_changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -E '^frontend/' > /dev/null; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Check for ansible changes
        id: ansible_changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -E '^ansible/' > /dev/null; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Log in to Container Registry
        if: steps.backend_changes.outputs.changed == 'true' || steps.frontend_changes.outputs.changed == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        if: steps.backend_changes.outputs.changed == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.backend
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:${{ github.ref_name }}-${{ steps.get_commit.outputs.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:latest

      - name: Build and push frontend image
        if: steps.frontend_changes.outputs.changed == 'true'
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:${{ github.ref_name }}-${{ steps.get_commit.outputs.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:latest


  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: |
      (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') &&
      (needs.build.outputs.backend_changed == 'true' || 
       needs.build.outputs.frontend_changed == 'true' || 
       needs.build.outputs.ansible_changed == 'true')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Login to GHCR on remote server
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} \
            "echo '${{ secrets.GITHUB_TOKEN }}' | docker login ghcr.io -u ${{ github.actor }} --password-stdin"

      - name: Run Ansible deployment
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: ansible/deploy.yml
          inventory: ${{ secrets.SERVER_HOST }}
          options: |
            --private-key ~/.ssh/id_rsa
            -u ubuntu
            -e backend_image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:${{ github.ref_name }}-${{ needs.build.outputs.commit_sha }}
            -e frontend_image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:${{ github.ref_name }}-${{ needs.build.outputs.commit_sha }}
            -e ansible_user=ubuntu
            -e ghcr_auth_token="${{ github.actor }}:${{ secrets.GHCR_PAT }}"
        env:
          ANSIBLE_HOST_KEY_CHECKING: false 
